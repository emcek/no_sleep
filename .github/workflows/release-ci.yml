name: Release Pipeline

on:
  push:
    tags: [ "v*" ]

jobs:
  style:
    uses: ./.github/workflows/style.yml

  wheel:
    needs: [ style ]
    uses: ./.github/workflows/wheel.yml

  github:
    needs: [ wheel ]
    runs-on: windows-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Set up Python environment"
        uses: ./.github/actions/setup-python

      - name: "Download no_sleep packages"
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: |
            no_sleep_*

      - name: "Release Notes"
        id: version
        run: |
          $no_sleep_ver = python scripts/latest_tag.py . 0
          Write-Output "number=$no_sleep_ver" >> $env:GITHUB_OUTPUT
          $changelog = Get-Content .\CHANGELOG.md
          $last_change = ($changelog | Select-String -Pattern "^##\s" | Select-Object -Skip 1 -First 1).LineNumber - 3
          ($changelog | Select-Object -First $last_change -Skip 1) -join "`n" | Out-File .\RELEASENOTES.md

      - name: "Create Release"
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.NO_SLEEP_REL_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: no_sleep ${{ steps.version.outputs.number }}
          body_path: RELEASENOTES.md
          draft: false
          prerelease: false
          files: |
            no_sleep-${{ steps.version.outputs.number }}-py3-none-any.whl
            no_sleep-${{ steps.version.outputs.number }}.tar.gz

  pypi:
    needs: [ wheel ]
    runs-on: ubuntu-latest
#    environment: pypi
#    permissions:
#      id-token: write

    steps:
      - name: "Download no_sleep wheel"
        uses: actions/download-artifact@v4
        with:
          name: no_sleep_wheel

      - name: "Publish no_sleep to PyPI"
        run: |
          mkdir dist
          mv *.whl *.tar.gz dist/
          ls -la dist/

      - name: "Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          skip-existing: true
          verbose: true
